#include "mpg123.h"

void dct64_4(real *out0,real *out1,real *samples)
{
  real bufs[64];

  {
    register int i,j;
    register real *b1,*b2,*bs,*costab;
  
    b1 = samples;
    bs = bufs;
    costab = pnts[0]+16;
    b2 = b1 + 32;
  
    for(i=8;i;i--)
      *bs++ = (*b1++ + *--b2);
    for(i=8;i;i--)
      *bs++= 0;
  
    bs += 16;
    b1 = bufs;
    costab = pnts[1]+8;
    b2 = b1 + 16;
  
    for(i=8;i;i--)
      *bs++ = (*b1++ + *--b2);
  
    b1 += 24;
    bs = bufs;
    costab = pnts[2];
    b2 = b1 + 8;
  
    for(i=4;i;i--)
      *bs++ = (*b1++ + *--b2);
    for(i=3;i>=0;i--)
      *bs++ = (*--b2 - *b1++) * costab[i];
  
    bs +=24;
    b1 = bufs;
    costab = pnts[3];
    b2 = b1 + 4;
  
    *bs++ = (*b1++ + *--b2);
    *bs++ = (*b1++ + *--b2);
    *bs++ = (*--b2 - *b1++) * costab[1];
    *bs++ = (*--b2 - *b1++) * costab[0];

    b2 += 8;

    *bs++ = (*b1++ + *--b2);
    *bs++ = (*b1++ + *--b2);
    *bs++ = (*b1++ - *--b2) * costab[1];
    *bs++ = (*b1++ - *--b2) * costab[0];
  
    b1 += 24;
    bs = bufs;
    costab = pnts[4];
  
    for(j=2;j;j--) {
      register real v0,v1;
      v0=*b1++; v1 = *b1++;
      *bs++ = (v0 + v1);
      *bs++ = (v0 - v1) * (*costab);
      v0=*b1++; v1 = *b1++;
      *bs++ = (v0 + v1);
      *bs++ = (v1 - v0) * (*costab);
    }
  
   }
  
   {
    register real *b1;
    register int i;
  
    for(b1=bufs,i=2;i;i--,b1+=4)
      b1[2] += b1[3];
  
    b1=bufs;
    b1[4] += b1[6];
    b1[6] += b1[5];
    b1[5] += b1[7];
  }

  out0[0x10*16] = bufs[0];
  out0[0x10*12] = bufs[4];
  out0[0x10* 8] = bufs[2];
  out0[0x10* 4] = bufs[6];
  out0[0x10* 0] = bufs[1];

  out1[0x10* 0] = bufs[1];
  out1[0x10* 4] = bufs[5];
  out1[0x10* 8] = bufs[3];
  out1[0x10*12] = bufs[7];
}
